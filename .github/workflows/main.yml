name: Main CI

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ secrets.TURBO_TEAM }}

jobs:
  build:
    name: Build
    timeout-minutes: 15
    runs-on: ubuntu-latest
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
    strategy:
      matrix:
        node-version: [16.x, 18.x]

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    - name: Cache next build
      uses: actions/cache@v3
      id: restore-build-cache
      env:
        cache-name: cache-next-build
      with:
        path: .next/cache
        key: ${{ runner.os }}-build-${{ env.cache-name }}

    - name: Setup pnpm
      uses: pnpm/action-setup@v2.2.2
      with:
        version: 7.13.0
        run_install: false

    - name: Get pnpm store directory
      id: pnpm-cache
      run: |
        echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

    - uses: actions/cache@v3
      name: Setup pnpm cache
      with:
        path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    - name: Install dependencies
      run: pnpm install

    - name: Format
      run: pnpm run format:check

    - name: Generate prisma schema
      run: pnpm exec prisma generate

    - name: Typecheck
      run: pnpm type-check

    - name: Build and lint
      run: pnpm turbo build lint
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
        NEXT_PUBLIC_SANITY_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_SANITY_PROJECT_ID }}
        SANITY_API_TOKEN: ${{ secrets.SANITY_API_TOKEN }}
        TWITTER_API_KEY: ${{ secrets.TWITTER_API_KEY }}
        CONTENTFUL_SPACE_ID: ${{ secrets.CONTENTFUL_SPACE_ID }}
        CONTENTFUL_ACCESS_TOKEN: ${{ secrets.CONTENTFUL_ACCESS_TOKEN }}

    - uses: actions/cache@v3
      with:
        path: ./*
        key: ${{ github.sha }}-${{ github.run_number }}

  stats:
    if: ${{ success() }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/cache@v3
        with:
          path: ./*
          key: ${{ github.sha }}-${{ github.run_number }}

      - name: Analyze bundle
        run: npx -p nextjs-bundle-analysis report

      - name: Upload bundle
        uses: actions/upload-artifact@v2
        with:
          name: bundle
          path: .next/analyze/__bundle_analysis.json

      - name: Download base branch bundle stats
        uses: dawidd6/action-download-artifact@v2
        if: success() && github.event.number
        with:
          workflow: main.yml
          branch: ${{ github.event.pull_request.base.ref }}
          path: .next/analyze/base

      - name: Compare with base branch bundle
        if: success() && github.event.number
        run: ls -laR .next/analyze/base && npx -p nextjs-bundle-analysis compare

      - name: Get comment body
        id: get-comment-body
        if: success() && github.event.number
        run: |
          body=$(cat .next/analyze/__bundle_analysis_comment.txt)
          body="${body//'%'/'%25'}"
          body="${body//$'\n'/'%0A'}"
          body="${body//$'\r'/'%0D'}"
          echo ::set-output name=body::$body

      - name: Find Comment
        uses: peter-evans/find-comment@v1
        if: success() && github.event.number
        id: fc
        with:
          issue-number: ${{ github.event.number }}
          body-includes: '<!-- __NEXTJS_BUNDLE -->'

      - name: Create Comment
        uses: peter-evans/create-or-update-comment@v1.4.4
        if: success() && github.event.number && steps.fc.outputs.comment-id == 0
        with:
          issue-number: ${{ github.event.number }}
          body: ${{ steps.get-comment-body.outputs.body }}

      - name: Update Comment
        uses: peter-evans/create-or-update-comment@v1.4.4
        if: success() && github.event.number && steps.fc.outputs.comment-id != 0
        with:
          issue-number: ${{ github.event.number }}
          body: ${{ steps.get-comment-body.outputs.body }}
          comment-id: ${{ steps.fc.outputs.comment-id }}
          edit-mode: replace
